[project]
name = "tender-tales"
version = "0.1.0"
description = "API for Tender Tales platform"
readme = "README.md"
authors = [{name = "Amrit Krishnan", email = "amrit110@gmail.com"}]
license = "Apache-2.0"
repository = "https://github.com/amrit110/tender-tales"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "earthengine-api>=0.1.384",
    "google-auth>=2.17.0",
    "numpy>=1.24.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["api/", "services"]

[dependency-groups]
dev = [
    "pytest>=7.1.1",
    "pre-commit>=4.0.0",
    "pytest-cov>=3.0.0",
    "codecov>=2.1.13",
    "mypy>=1.7.0",
    "ruff>=0.6.0",
    "pip-audit>=2.7.1",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings>=0.24.0",
    "mkdocstrings-python>=1.8.0",
    "pymdown-extensions>=10.7.0",
    "mkdocs-include-markdown-plugin>=4.0.0",
]

[tool.mypy]
plugins = ["pydantic.mypy"]
ignore_missing_imports = true
install_types = true
pretty = true
namespace_packages = true
explicit_package_bases = true
non_interactive = true
warn_unused_configs = true
allow_any_generics = false
allow_subclassing_any = false
allow_untyped_calls = false
allow_untyped_defs = false
allow_incomplete_defs = false
check_untyped_defs = true
allow_untyped_decorators = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true
extra_checks = true

# Per-module override for files using Google Earth Engine library
# The ee module uses dynamic imports and re-exports that mypy cannot detect
[[tool.mypy.overrides]]
module = "tender_tales.services.earth_engine"
disable_error_code = ["attr-defined"]

[tool.ruff]
include = ["*.py", "pyproject.toml", "*.ipynb"]
line-length = 88

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = [
    "A", "B", "COM", "C4", "RET", "SIM",
    "ICN", "Q", "RSE", "D", "E", "F",
    "I", "W", "N", "ERA", "PL"
]
fixable = [
    "A", "B", "COM", "C4", "RET", "SIM",
    "ICN", "Q", "RSE", "D", "E", "F",
    "I", "W", "N", "ERA", "PL"
]
ignore = [
    "B905", "E501", "D203", "D213",
    "PLR2004", "PLR0913", "COM812"
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F811"]

[tool.ruff.lint.pep8-naming]
ignore-names = ["X*", "setUp"]

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=tender_tales",
    "--cov-report=term-missing",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["api"]
omit = ["tests/*", "*__init__.py"]
